-- micro sec
 -- make sure that DB grants in dev,qa are not wiped after DB refresh from prod

 
 sp_helplogins no access in prod or ror, use below to see roles for a user
 EXEC sp_MSforeachdb 'USE ? SELECT r.name role_principal_name, m.name AS member_principal_name FROM sys.database_role_members rm JOIN sys.database_principals r    ON rm.role_principal_id = r.principal_id JOIN sys.database_principals m ON rm.member_principal_id = m.principal_id where m.name = ''AXYZ\svc_ActiveFX'' '
 use Optimizer   sp_helprotect NULL,'AAMTableauReportsRole'
 
EXECUTE AS LOGIN = 'test'     EXECUTE AS USER = 'test'      SELECT SUSER_NAME() 'login',CURRENT_USER 'user';
 
 -- Refresh automation post refresh git script after Snap refresh




 ****  tp_process_bbh_fxlink_file    EXEC master.dbo.xp_smtp_sendmail     ****************
 br$Kg%j3 svc_qaOrs
 
 ---------------------------------------------------------------#### tempdb full issue---------------------------------------------------------------
 select * from sys.dm_db_session_space_usage
where session_id =63


SELECT 
(SUM(unallocated_extent_page_count)*1.0/128) AS [Free space(MB)]
,(SUM(version_store_reserved_page_count)*1.0/128)  AS [Used Space by VersionStore(MB)]
,(SUM(internal_object_reserved_page_count)*1.0/128)  AS [Used Space by InternalObjects(MB)]
,(SUM(user_object_reserved_page_count)*1.0/128)  AS [Used Space by UserObjects(MB)]
FROM tempdb.sys.dm_db_file_space_usage;

SELECT 
  DB_NAME(database_id) as 'Database Name',
  reserved_page_count,
  reserved_space_kb 
FROM sys.dm_tran_version_store_space_usage;

select
t.transaction_id,t.name,t.transaction_type, t.transaction_state,
s.transaction_id,s.session_id,
s.elapsed_time_seconds/60/60.0 as hours_tran_has_been_open,  p.status, p.cmd
from sys.dm_tran_active_transactions t
  join sys.dm_tran_active_snapshot_database_transactions s
     on t.transaction_id = s.transaction_id
  join sys.sysprocesses p
     on p.spid = s.session_id

DBCC INPUTBUFFER(264)
GO

(@P0 varchar(8000))SELECT ATTR_PARAM.ATTR_NAME,ATTR_PARAM.ATTR_VALUE,ATTR_PARAM.ATTR_MODULE,ATTR_PARAM.COMMENTS,ATTR_PARAM.TECH_TTY_ID FROM ATTR_PARAM WHERE ATTR_PARAM.ATTR_NAME= @P0

---------------------------------------------------------------------------------------------------------------------------------------------------------
 
 
 
 https://www.sqlskills.com/blogs/paul/replication-preventing-log-reuse-but-no-replication-configured/
 https://www.sqlskills.com/blogs/paul/importance-of-proper-transaction-log-size-management/
 select name, log_reuse_wait_desc from sys.databases
EXEC sp_removedbreplication 'BISAMDW'
DBCC SHRINKFILE (DataFile1, 7);
SET XACT_ABORT  ON
begin
declare @trancount int;
begin try
begin tran
raiserror('Could not enqueue delete transaction for hinettt', 16, 1)
select 1/0
print 'in tran'
commit;
end try

begin catch
print @@trancount
print 'in catch'
--rollback;
print @@trancount
end catch

end


 
DECLARE @HinetTranId INT, @rc INT
EXEC @rc = trading.dbo.SPPostActiveFXTrade @ActiveFXTradeId = 2635086, @HinetTranId = @HinetTranId outputÂ 
SELECT 2635086 AFXTradeId, @HinetTranId HinetTranId, @rc rc
 
 ***************ReplData.dbo.refIdentifier and ReplData.dbo.refSecurity  tables are sourced from bos-dbrnd02.reference database and replicated to ReplData on bos-dbcore01

 -- extract role grants for a user ----------------------------------------------------------------------------------------------------
SELECT 'EXEC sp_addrolemember ''' + DBRole.NAME + ''', ''' + DBUser.NAME + '''' AS '--Add Users to Database Roles--'
FROM sys.database_principals DBUser
INNER JOIN sys.database_role_members DBM ON DBM.member_principal_id = DBUser.principal_id
INNER JOIN sys.database_principals DBRole ON DBRole.principal_id = DBM.role_principal_id
and DBUser.NAME='AXYZ\svc_actvbsqluser'
--https://solutioncenter.apexsql.com/how-to-script-sql-server-logins-and-permissions/ 
----------------------------------------------------------------------------------------------------------------------------------------------

 --#################### Securables grants for a Database User ###################################################
 use BISAMDW  -- replace with database name

SELECT (case when state_desc like 'GRANT%' then 'GRANT' else state_desc end)
  + ' ' + database_permissions.permission_name 
  + CASE database_permissions.class_desc
        WHEN 'SCHEMA' THEN ' ON SCHEMA::[' + schema_name(major_id) + ']'
        WHEN 'OBJECT_OR_COLUMN' THEN ' ON ' 
          + isnull('[' + schema_name(objects.schema_id) + '].', '') + '['
          + (CASE WHEN minor_id = 0 THEN object_name(major_id)  + ']' COLLATE Latin1_General_CI_AS_KS_WS
            ELSE (SELECT object_name(object_id) + '] (['+ name + '])'
                  FROM sys.columns 
                  WHERE object_id = database_permissions.major_id 
                  AND column_id = database_permissions.minor_id) end)
        WHEN 'DATABASE_PRINCIPAL' THEN ' ON USER::[' + USER_NAME(major_id) + ']'
        WHEN 'DATABASE' Then ''
        WHEN 'SERVICE_CONTRACT' then ' ON CONTRACT::[' 
          + (select name 
             from sys.service_contracts 
             where service_contract_id = major_id) 
          + ']'
        ELSE ' <<' + database_permissions.class_desc + '>>'
    END
  + ' TO [' + database_principals.name + ']'
  + (case when state_desc = 'GRANT_WITH_GRANT_OPTION' then ' WITH GRANT OPTION' else '' end)
  COLLATE Latin1_General_CI_AS_KS_WS
FROM sys.database_permissions
inner JOIN sys.database_principals
ON database_permissions.grantee_principal_id = database_principals.principal_id
LEFT JOIN sys.objects
ON objects.object_id = database_permissions.major_id
WHERE database_permissions.major_id > 0
AND database_principals.name='AXYZ\Performance & Attribution Group'  -- replace with database username

-- Output
-- GRANT EXECUTE ON [dbo].[SPbisamGetAttributionsByType] TO [AXYZ\Performance & Attribution Group]
-- GRANT EXECUTE ON [dbo].[SPbisamGetFwdsOnWrongAccounts] TO [AXYZ\Performance & Attribution Group]
-- .................
--###########################################################################################################
 
 Use ActiveFX;  -- ADJUST DB NAME

DECLARE @RoleName varchar(50) = 'AAMIFXImportServiceRole' --- PLACE ROLE NAME

SELECT 'CREATE ROLE ' + @RoleName + ';'+ char(13)

SELECT  'GRANT ' + prm.permission_name + ' ON [' + s.name + + '].[' + OBJECT_NAME(major_id) + '] TO [' + rol.name + '] ;' + char(13) COLLATE Latin1_General_CI_AS
from sys.database_permissions prm join sys.database_principals rol on prm.grantee_principal_id = rol.principal_id
JOIN sys.objects AS o  ON prm.major_id = o.object_id 
JOIN sys.schemas AS s  ON o.schema_id = s.schema_id
where rol.name = @RoleName
 
 
DBCC SHOWFILESTATS        DBCC SQLPERF(LOGSPACE)            DBCC LOGINFO
 
select * from performance.[dbo].[ChangeLog] order by ExecutedAt desc
select * from AXYZ.dbo.ChangeLog order by ExecutedAt desc
select * from msdb.cicd.Jobs  where Branch='feature/TI-10407D' and AppName='/tods/database-mssql' order by ExecutedAt desc
-- object change history
select * from sysobjects order by crdate desc 
 
select * from fn_my_permissions(null,'SERVER') 
use db;
select * from fn_my_permissions(null,'DATABASE')

--List all effective permissions for securable class server
EXECUTE AS LOGIN = 'test'
Go
SELECT SUSER_NAME() 'login',CURRENT_USER 'user';  
SELECT * FROM fn_my_permissions(NULL, 'SERVER'); 
Go
EXECUTE AS USER = 'test'
GO
USE AdventureWorks2019
GO
SELECT * FROM fn_my_permissions(null, 'database'); 
GO

exec sp_helplogins 'AXYZ\Sec) Portfolio Construction Group' 
exec sp_helplogins 'AXYZ\SQL_Developers' 

grant execute on master.[dbo].[sp_who3] to [AXYZ\SQL_Developers]
grant execute on master.[dbo].[sp_who3] to [AXYZ\SQLDev]

---##################
EXEC sp_MSforeachdb 'USE ? select db_name() db_name, object_name(c.object_id) object_name,c.name,c.system_type_id,t.name from sys.all_columns c inner join sys.types t on c.system_type_id=t.system_type_id where c.name  in (''order_id'',''trade_id'',''placement_id'') '
EXEC sp_MSforeachdb 'USE ? select db_name(), object_name(c.object_id),c.name,c.system_type_id,t.name,* from sys.all_columns c inner join sys.types t on c.system_type_id=t.system_type_id where c.name  in (''order_id'',''trade_id'',''placement_id'') '
---##################

--######  AXYZ\SQLServices in prod ACCADIAN\SQLDev in dev, used by gitlab BOS-HCPMS01  SQLCMD

BACKUP DATABASE [ETLMetadata] TO  DISK = N'H:\BACKUP\EC2AMAZ-A9PIKDV\ETLMetadata\ETLMetadata_FULL_Backup_Jan25.bkp' WITH NOFORMAT, NOINIT,  NAME = N'ETLMetadata-Full Database Backup', SKIP, NOREWIND, NOUNLOAD,  STATS = 10
-- BISAMDW backup tran log
EXECUTE [dbo].[DatabaseBackup]
	@Databases	= 'BISAMDW'			-- BISAMDW Database
,	@Compress	= 'Y'				-- Use Backup Compression
,	@Directory	= NULL				-- Backup to default Backup directory
,	@BackupType	= 'LOG'				-- Transaction Log Backup
,	@Verify		= 'N'				-- Don't verify the Backups (done on system databases only)
,	@CleanupTime	= 188			-- Cleanup old Backups after 188 hours (just under 8 days) after the most recent backup is taken 
,	@CleanupMode	= 'AFTER_BACKUP' -- Cleanup old Backups after the new backup has been created
,	@CheckSum	= 'N'				-- Don't use Backup checksums
,	@FileExtensionFull	= N'BAK'	-- We keep file extensions consistent with AXYZ's existing backup file extensions
,	@FileExtensionDiff	= N'DIFF'
,	@FileExtensionLog	= N'TRN'
,	@LogToTable	= 'Y'				-- Log commands executed to [master].[dbo].[CommandLog]

DBCC SQLPERF (logspace) -- 0.8

USE DataWarehouse
SELECT total_log_size_in_bytes/1048576.0 AS [Total Log Size in Bytes],used_log_space_in_bytes/1048576.0 AS [Used Log Size in Bytes],used_log_space_in_percent [Used Log Space in %],
 (total_log_size_in_bytes - used_log_space_in_bytes)/1048576.0 AS [Free log space in MB],log_space_in_bytes_since_last_backup/1048576.0 [Log Since Last Log Backup]
FROM sys.dm_db_log_space_usage;


-- Table partition Scheme and index details
SELECT  t.name,i.name,i.type_desc,ps.name,sum(p.rows) row_count
FROM sys.tables AS t JOIN sys.indexes AS i  ON t.[object_id] = i.[object_id]   
JOIN sys.partition_schemes ps  ON i.data_space_id = ps.data_space_id   
JOIN sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id
JOIN sys.allocation_units a ON p.partition_id = a.container_id
WHERE ps.name = 'PS_BISAM_PORTFOLIO' and i.type=1 and SCHEMA_NAME(t.schema_id)='warehouse'
and t.name not like '%_Archive'
GROUP BY t.name,i.name,i.type_desc,ps.name order by row_count desc

USE BISAMDW 
EXEC sys.sp_cdc_stop_job @job_type = N'cleanup';  -- schedule to run M-F at 1 PM
EXEC sys.sp_cdc_start_job @job_type = N'cleanup'; -- default job type is capture, so specifying no parameter works on CAPTURE job
GO
cdc.BISAMDW_capture --always runs and starts with sql agent


-- procedure execution history
select database_id,db_name(database_id),object_id,object_name(object_id),cached_time, last_execution_time, execution_count from sys.dm_exec_procedure_stats
select database_id,db_name(database_id),object_id,object_name(object_id),cached_time, last_execution_time, execution_count from sys.dm_exec_procedure_stats where object_name(object_id)='SPrptHoldingsSnapshot'
select * from master.[dbo].[dbaProcedureUsage] (nolock) where ProcName='SPrptHoldingsSnapshot'

https://git.AXYZ-asset.com/trading-investments/crd/database-mssql/-/merge_requests/728/diffs
https://git.AXYZ-asset.com/trading-investments/crd/database-mssql/-/blob/master/CORE/AXYZ/AUX%20Scripts/Alter/crdTradeExport_Index.sql 
USE [AXYZ]
GO

IF NOT EXISTS(SELECT 1 FROM sys.indexes WHERE object_id = object_id('dbo.crdTradeExport') AND name ='idx_crdTradeExport_FUNDID_STATUS')
BEGIN

CREATE NONCLUSTERED INDEX [idx_crdTradeExport_FUNDID_STATUS]
ON [dbo].[crdTradeExport] ([TRADE_DATE],[FUNDID],[STATUS])
WITH (DATA_COMPRESSION = PAGE, PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON)
END


alter database ActiveFX set compatibility_level=120
alter database ActiveFX set compatibility_level=140
sp_helpdb          ActiveFX.projections.SPGetProjectionsInternal
use ActiveFX
go
declare @p1 dbo.TTPortfolioCodeList
insert into @p1 values('006')
exec projections.SPGetProjectionsInternal @PortfolioCodeList=@p1,@CacheId='43A43C8D-15BA-455F-93B1-9A6FE9C09FE3'
declare @p1 dbo.TTPortfolioCodeList
 insert into @p1 values('130') 
 exec projections.SPGetProjectionsInternal @PortfolioCodeList=@p1,@CacheId='A3E2266B-A8A7-4280-BA11-141F8AA338E7'

SELECT t.text,qs.plan_handle,qs.*,p.*
    FROM sys.dm_exec_query_stats                    [qs] 
CROSS APPLY sys.dm_exec_sql_text([qs].sql_handle)      [t]
CROSS APPLY sys.dm_exec_query_plan([qs].[plan_handle]) [p]
  WHERE [t].text LIKE '%SPGetProjectionsInternal%'
    ORDER BY total_elapsed_time DESC



-- https://docs.microsoft.com/en-us/sql/relational-databases/system-dynamic-management-views/sys-dm-sql-referenced-entities-transact-sql?view=sql-server-ver16 
SELECT distinct referenced_database_name,referenced_schema_name,referenced_entity_name  --#########################################
FROM sys.dm_sql_referenced_entities ('dbo.SPGetBottomUpReturns', 'OBJECT')
 order by referenced_entity_name

execute as login ='AXYZ\svc_actvbsqluser'     ------

SELECT * INTO dbo.audit_staging_table FROM fn_get_audit_file('E:\SqlAudits\*', default, default);
select * from fn_get_audit_file('Audit_ph_staging_detail_9E8C81A5-678C-45DA-BF5E-7935BFB3E6BC_0_132989870955450000.sqlaudit',default,default)

select .. from tabname OPTION (MAXDOP 16)

-- performance.dbo.SPGetBottomUpReturns Tuning review

--June 15 increased LOCK on BISAM INT ( Did not help)
use BISAMDW
go
sp_configure 'locks'
go
sp_configure 'show advanced options', 1;  
GO  
RECONFIGURE;  
GO  
sp_configure 'locks', 30000;  
GO  
RECONFIGURE;  
GO  

-- Deadlock Trace enable Errorlog
DBCC TRACEON(1204,1222,-1)
DBCC TRACESTATUS(-1)
DBCC TRACEOff(1204,1222,-1)

-- April 12 2023 Saravana dbrnd02-dev01/03Â [Reference].[dbo].[refSecurityCreditICEMarketData] Vault dev entry https://vault.service.dev.AXYZ-asset.com/ui/vault/secrets/secret/show/avm/AXYZ-trading/hasura/dbrnd02_password 
CREATE LOGIN [sql_dev_TradingHasura] WITH PASSWORD=N'tRowEL1cIr10', DEFAULT_DATABASE=[Reference],CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
CREATE LOGIN [svc_devperfdataquality] WITH PASSWORD=N'1Zyo1649XNEj', DEFAULT_DATABASE=[AccountPerformance],CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
CREATE LOGIN [svc_pag_dq_check] WITH PASSWORD=N'xxxxxxx', DEFAULT_DATABASE=[master],CHECK_EXPIRATION=OFF, CHECK_POLICY=OFF
,SID=0xDFD1232720AD334F9402105E70D20608  -- login to map ror sid with sid from dbcore01 prod

USE DataWarehouse;   
GRANT EXECUTE ON OBJECT::[warehouse].[SPbsmPopulateBisamSecurityMaster_Headstoc] TO ActiveBatchRole;  
GO  
GRANT EXECUTE ON [warehouse].[SPbsmPopulateBisamSecurityMaster_Headstoc] TO [AXYZ\FCunningham];  

-- Monitor rollback
select session_id,command,status,percent_complete,reads,writes
from sys.dm_exec_requests where command IN ('killed/rollback','rollback')

sp_who3
sp_who2 active
sp_help 'BISAMDW.dbo.ATTR_PERF_ATTRIBUTION'

SQL server and other software location  \\AXYZ-asset.com\Admin\pcadmin\Applications\Microsoft\SQLServer2017
aws s3 rm s3://great-plains-production-db-backup --recursive
#Full BKP Sync
[String]$ComputerName = $env:COMPUTERNAME.ToUpper()
[String]$r1BucketName = "great-plains-production-db-backup"
& 'C:\Program Files\Amazon\AWSCLI\bin\aws.exe' s3 sync "E:\BACKUP\$ComputerName" "s3://$r1BucketName/$ComputerName" --sse "aws:kms" --storage-class "STANDARD_IA"  --exclude "*" --include "*.BAK"

https://www.mssqltips.com/sqlservertip/3288/sql-server-replication-error-the-specified-lsn-for-repldone-log-scan-occurs-before-the-current-start-of-replication-in-the-log/ 
https://www.sqlservercentral.com/forums/topic/cdc-capture-job-issue 
-- bisamdw cdc latency  https://docs.microsoft.com/en-us/sql/relational-databases/track-changes/administer-and-monitor-change-data-capture-sql-server?view=sql-server-ver15
-- To troubleshoot check from sys.dm_cdc_log_scan_sessions. If no rows. Drop and recreate CDC cleanup job. check sql agent job step error
use BISAMDW;
select session_id,latency, start_time, end_time, duration, scan_phase, error_count, start_lsn, current_lsn, end_lsn, tran_count, last_commit_lsn,
last_commit_time, log_record_count, schema_change_count,  command_count, first_begin_cdc_lsn, last_commit_cdc_lsn, last_commit_cdc_time, 
 empty_scan_count, failed_sessions_count   from sys.dm_cdc_log_scan_sessions

-- bisamdw cdc settings
select db_name(database_id), job_type, retention from msdb.dbo.cdc_jobs
-- runs at 12 am and set CDC retention to 1 day from 1-6 business days. Else 3 days
-- BISAMDW.[dbo].[aamSPCDCRetentionInDays   ( Called using activebatch job)
select db_name(database_id), job_type, retention from msdb.dbo.cdc_jobs  
--bisamdw regular days set to 4320 minutes(3 days) for prod, sbox1 ( 1st 6 buss days set to 1)
EXECUTE sys.sp_cdc_change_job @job_type = N'cleanup', @retention = 1440;  -- 1 day
EXECUTE sys.sp_cdc_change_job @job_type = N'cleanup', @retention = 4320;  -- 3 days

sql agent [cdc.BISAMDW_cleanup]      BISAMDW  sys.sp_MScdc_cleanup_job     BISAMDW.[dbo].[aamSPCDCRetentionInDays]

use bisamdw
select * from cdc.change_tables where capture_instance like '%ATTR_PERF_ATTRIBUTION%'  -- look down for other cdc sp and queries


USE BISAMDW  -- default job type is capture, so specifying no parameter works on CAPTURE job
EXEC sys.sp_cdc_stop_job @job_type = N'cleanup';
EXEC sys.sp_cdc_start_job @job_type = N'cleanup';


-- run below after every db refresh in non prod					   
USE BISAMDW 
GO
EXEC sys.sp_cdc_add_job @job_type = N'capture'; 
EXEC sys.sp_cdc_add_job @job_type = N'cleanup'; 
GO
use AXYZ  
select * from cdc.change_tables where capture_instance like '%bsmQ%'    -- bisam_bsmQuintiles and bisam_bsmQuintileRegionLookup table cdc already enabled as 3/22
use AXYZ  
GO
EXEC sys.sp_cdc_add_job @job_type = N'capture'; 
EXEC sys.sp_cdc_add_job @job_type = N'cleanup'; 
GO
use  accounting
GO
EXEC sys.sp_cdc_add_job @job_type = N'capture'; 
EXEC sys.sp_cdc_add_job @job_type = N'cleanup'; 
GO

-- CDC https://www.sqlshack.com/change-data-capture-for-auditing-sql-server/  https://www.youtube.com/watch?v=IJbAhfFRHdA   Enabling CDC In order to enable the Change Data capture on a specific table, for auditing purposes, CDC should be enabled first at the database level first, by a member of the SYSADMIN fixed server role, using the sys.sp_cdc_enable_db. After enabling CDC at the database level, we can enable it to track and audit the DML changes on the database tables, by a member of db_owner fixed database role, using the sys.sp_cdc_enable_table system stored procedure, with the ability to enable it to track changes on list of columns specified by the @captured_column_list 

#####################################################################################################################################
Steps to enable CDC on BISAMDW and replicate changes to BOS-DBWH02 PROD. Follow 

PSD-909  2 step process  1) Enable CDC and grants in BISAMDW and replicate changes to Datawarehouse for T_COUNTRY table (use git post script for changes) https://git.AXYZ-asset.com/performance/bisam/warehouse-loader/database-mssql/-/blob/master/DBBONE01/BISAMDW/Scripts/PostDeployment/008-PMA-961%20Add%20T_Country%20to%20cdc.sql
	1) Senthil did steps on BOS-DBWH02 side PSD-909 
Reference doc https://AXYZ-asset.atlassian.net/wiki/spaces/PD/pages/47349767/Add+New+Tables+Columns+To+DataWarehouse
USE BISAMDW
GO
EXEC sys.sp_cdc_enable_table
@source_schema = N'dbo',
@source_name = N'T_COUNTRY',
@role_name = N'CDCRole',
@capture_instance = N'dbo_T_COUNTRY',
@supports_net_changes = 0,
@captured_column_list = NULL,
@filegroup_name = N'BISAMDW_CDC_DATA'
GO
GRANT SELECT ON cdc.dbo_T_COUNTRY_CT TO CDCRole;
GRANT SELECT ON dbo.T_COUNTRY TO CDCRole;
#####################################################################################################################################

Christian doc - Enable CDC on dbcore, Adding tables to changedata on dbwho-02 instance without having it flow to DataWarehouse
https://AXYZ-asset.atlassian.net/wiki/spaces/PAB/pages/2602795015/Enabling+CDC+for+Snowflake+Consumption 
					
use performance;
select name,is_cdc_enabled from sys.databases where is_cdc_enabled=1 -- cdc enabled at DB
select name,schema_name(schema_id) schema_nm,type from sys.tables where is_tracked_by_cdc=1  order by schema_nm
--enables change data capture for the HumanResources.Employee table. Only the required parameters are specified.
use AXYZ;
EXEC sys.sp_cdc_enable_table  
    @source_schema = N'dbo'  
  , @source_name = N'FrankingCreditCcy'  
  , @role_name = N'CDCRole'  
  , @filegroup_name = N'PRIMARY';  
GO  

use bisamdw
select * from cdc.change_tables where capture_instance like '%ATTR_PERF_ATTRIBUTION%'
use BISAMDW;
EXEC sys.sp_cdc_disable_table  
    @source_schema = N'dbo'  
  , @source_name = N'ATTR_PERF_ATTRIBUTION'  
  , @capture_instance = N'dbo_ATTR_PERF_ATTRIBUTION'

GO  
EXEC sys.sp_cdc_enable_table  
    @source_schema = N'dbo'  
  , @source_name = N'ATTR_PERF_ATTRIBUTION'  
  , @role_name = N'CDCRole'  
  , @filegroup_name = N'BISAMDW_CDC_DATA',
  @supports_net_changes = 0;    -- supports_net_changes=1 is set in BISAM prod, set to 0 to reduce CDC latency in BISAM Sandbox1 
GO  


grant select on  [cdc].[dbo_FrankingCreditCcy_CT] to CDCRole;
grant select on AXYZ.cdc.dbo_FrankingCreditCcy_CT to [AXYZ\fcunningham];
grant select on  dbo.FrankingCreditCcy to CDCRole;

alter role CommunityAccess drop member usernm;



[5:31 PM] Stephen Sullivan -- #########################################################################################
CREATE TABLE #FileSize
(dbName NVARCHAR(128),Â Â Â Â FileName NVARCHAR(128), Â Â Â Â type_desc NVARCHAR(128),Â Â Â Â FileLocation NVARCHAR(256),Â Â Â Â MappedDrive NVARCHAR(128),Â Â Â Â CurrentSizeMB DECIMAL(10,2), Â Â Â Â FreeSpaceMB DECIMAL(10,2)
);Â Â Â Â 
INSERT INTO #FileSize(dbName, FileName, type_desc, FileLocation, MappedDrive, CurrentSizeMB, FreeSpaceMB)
exec master.dbo.sp_MSforeachdb
'use [?];
SELECT DB_NAME() AS DbName,Â Â Â Â Â Â Â Â df.name AS FileName,Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â type_desc,Â Â Â Â Â Â Â Â sa.filename,Â Â Â Â Â Â Â Â CASE WHEN sa.filename like ''C:\SQL\data%'' THEN LEFT(sa.filename,13) ELSE LEFT(sa.filename,3) END as MappedDrive,Â Â Â Â Â Â Â Â df.size/128.0 AS CurrentSizeMB,Â Â Â Â Â Â Â Â Â Â df.size/128.0 - CAST(FILEPROPERTY(df.name, ''SpaceUsed'') AS INT)/128.0 AS FreeSpaceMB
FROM sys.database_files df
LEFT JOIN master..sysaltfiles sa ON df.name collate SQL_Latin1_General_CP1_CS_AS = sa.name
WHERE type IN (0,1);';Â Â Â Â 
SELECT dbName, FileName, type_desc, FileLocation, MappedDrive, CurrentSizeMB, FreeSpaceMB, Cast((FreeSpaceMB / CurrentSizeMB) * 100 as Decimal(18,2)) as PctFree
FROM #FileSize
--WHERE dbName IN ('qai') and MappedDrive = 'F:\'
--AND FreeSpaceMB > ?;
Order by MappedDrive, dbNameÂ Â Â Â 
DROP TABLE #FileSize;
-- use this to get the used / free space by drive and data file
-- #########################################################################################


-- Refer to Microsoft Notes "login map"
--update mapping table  after creating svc_dev* svc_qa* user ( Below will allow user creation after prod snap)
use master;
SELECT  a.[MappingId],a.[LoginName], b.LoginName,a.[LoginTypeId],a.[ParentMappingId]
  FROM [master].[dbo].[ServiceAccountMapping] a join [master].[dbo].[ServiceAccountMapping] b  on a.MappingId=b.ParentMappingId
--master.dbo.sp_AAM_CreateNewAccountForAllDb @ProdLogin,@DevLogin
--master.dbo.sp_AAM_CreateAccountForSingleDb
-- Refresh post script DBCore,  If roles are present with same name in prod,qa,dev they are mapped and granted using [master].[dbo].[ServiceAccountMapping] Table
-- https://git.AXYZ-asset.com/DO/RefreshAutomation/-/blob/master/CORE/11-CloneProductionPermissions.sql executes sp_AAM_CreateAccountForSingleDb(create user for login) sp_AAM_CreateNewAccountForAllDb
-- Refresh post script DBWH02
-- https://git.AXYZ-asset.com/DO/RefreshAutomation/-/blob/master/WH02/98_Access_for_FCunningham.sql

-- dev dbcore-dev01  -- use 2 for dev 
USE [master]
GO
INSERT INTO [dbo].[ServiceAccountMapping]  ([MappingId],[LoginName],[LoginTypeId],[ParentMappingId])
     VALUES(269,'svc_Adhoc',1,NULL)
INSERT INTO [dbo].[ServiceAccountMapping]  ([MappingId],[LoginName],[LoginTypeId],[ParentMappingId])
     VALUES(270,'svc_devAdhoc',2,269)

select *  from [master].[dbo].[ServiceAccountMapping] where MappingId in (269,270)

-- qa  dbcore-qa01  -- use 3 for qa
USE [master]
GO
INSERT INTO [dbo].[ServiceAccountMapping]  ([MappingId],[LoginName],[LoginTypeId],[ParentMappingId])
     VALUES(323,'svc_Adhoc',1,NULL)
INSERT INTO [dbo].[ServiceAccountMapping]  ([MappingId],[LoginName],[LoginTypeId],[ParentMappingId])
     VALUES(324,'svc_qaAdhoc',3,323)

	 

use [DataMart]
DECLARE @Environment VARCHAR(5)
EXEC DataMart.dbo.sp_get_environment @Environment=@Environment OUTPUT

cmd> wmic useraccount where name='rkumar' get sid         (output  SID  S-1-5-21-1974477226-268597913-1415713722-73962 )

DBCC SHOW_STATISTICS ("BISAMDW.dbo.ATTR_PERF_ATTRIBUTION",[PERF_ATTRIB_CALCUL_DATE_IDX]); 
DBCC SHOW_STATISTICS ("BISAMDW.dbo.ATTR_PERF_ATTRIBUTION",[PERF_ATTRIB_END_DATE_IDX]); 

DBCC SHOW_STATISTICS ("[warehouse].[bisamAttributions_Headstoc]",[PK_warehouse_bisamAttributions_Headstoc]);  

--bos-dbwh02 ( Auto Update Statistics and Asynchronously(True) , Auto Create Incremental Statistics = False )
-- Database Tables and rowcounts  -- https://www.mssqltips.com/sqlservertip/2537/sql-server-row-count-for-all-tables-in-a-database/ 
SELECT   QUOTENAME(SCHEMA_NAME(sOBJ.schema_id)) + '.' + QUOTENAME(sOBJ.name) AS [TableName]    , SUM(sPTN.Rows) AS [RowCount]
FROM sys.objects AS sOBJ     INNER JOIN sys.partitions AS sPTN         ON sOBJ.object_id = sPTN.object_id
WHERE      sOBJ.type = 'U'      AND sOBJ.is_ms_shipped = 0x0      AND index_id < 2 -- 0:Heap, 1:Clustered  
AND sOBJ.name like 'bisam%'
GROUP BY   sOBJ.schema_id , sOBJ.name ORDER BY 2 desc

---- statistics modification_counter, runs in 30 seconds
use db_name;
SELECT schema_name(obj.schema_id),obj.name, obj.object_id, stat.name, stat.stats_id,last_updated, modification_counter
FROM sys.objects AS obj INNER JOIN sys.stats AS stat ON stat.object_id = obj.object_id
CROSS APPLY sys.dm_db_stats_properties(stat.object_id, stat.stats_id) AS sp ORDER BY modification_counter DESC

SELECT DB_Name() DatabaseName, OBJECT_SCHEMA_NAME(obj.object_id) schemaName, obj.name TableName,    stat.name, modification_counter, 
            [rows], rows_sampled, rows_sampled* 100 / [rows] AS [% Rows Sampled],     last_updated
FROM        sys.objects AS obj INNER JOIN  sys.stats AS stat ON stat.object_id = obj.object_id
CROSS APPLY sys.dm_db_stats_properties(stat.object_id, stat.stats_id) AS sp
WHERE       obj.is_ms_shipped = 0 and last_updated is not null and modification_counter > 20000
AND [rows] >= 20000 AND rows_sampled * 100 / [rows] >  10  ORDER BY    last_updated , modification_counter DESC

-- Query to check if the statistics for a object is stale
use Optimizer
go
-- Query to check if the statistics for a object is stale
SELECT obj.name, obj.object_id, stat.name, stat.stats_id,last_updated, modification_counter
FROM sys.objects AS obj INNER JOIN sys.stats AS stat ON stat.object_id = obj.object_id CROSS APPLY sys.dm_db_stats_properties(stat.object_id, stat.stats_id) AS sp
where stat.object_id=object_id('Optimizer.dbo.EvaluationResults') ORDER BY modification_counter DESC

use bisamdw;
SELECT obj.name, obj.object_id, stat.name, stat.stats_id,last_updated, modification_counter
FROM sys.objects AS obj INNER JOIN sys.stats AS stat ON stat.object_id = obj.object_id CROSS APPLY sys.dm_db_stats_properties(stat.object_id, stat.stats_id) AS sp
where stat.object_id=object_id('BISAMDW.dbo.ATTR_PERF_ATTRIBUTION') ORDER BY modification_counter DESC

-- Update only statitics of a index
update statistics DataWarehouse.warehouse.bisamAttributions_Headstoc                 DataWarehouse.warehouse.bisamAttributions_GICS_SubInd
update statistics [warehouse].[bisamAttributions_Headstoc] [PK_warehouse_bisamAttributions_Headstoc] 
update statistics DataWarehouse.warehouse.bisamAttributions_GICS_SubInd  -- apr 1 2022

-- CHECK modification_counter
select * from sys.dm_db_stats_properties(object_id('DataWarehouse.warehouse.bisamAttributions_Headstoc'),2)
select * from sys.dm_db_stats_properties(object_id('BISAMDW.[dbo].[INDEX_WEIGHTINGS]'),2)
sp_spaceused "[warehouse].[bisamAttributions_Headstoc]"
sp_spaceused "[warehouse].[bisamAttributions_GICS_Sec]"
update statistics [warehouse].[bisamAttributions_Headstoc]
update statistics [warehouse].[bisamAttributions_GICS_Sec]
DBCC SHOW_STATISTICS ("[warehouse].[bisamAttributions_Headstoc]",[PK_warehouse_bisamAttributions_Headstoc]);  


set statistics io on;
set statistics xml on;
EXEC AccountPerformance.acctperf.SPrptGetAllAccountMonthlyReturns null, '10/31/2021'

update statistics [acctperf].[AccountMonthlyReturnsBiSam];
update statistics [acctperf].[AccountMonthlyReturnsLegacy];

-- procedure execution stats and plan_handle
SELECT  OBJECT_NAME(object_id, database_id) 'proc name',  d.cached_time, d.last_execution_time, d.total_elapsed_time, d.total_elapsed_time/d.execution_count AS [avg_elapsed_time], d.last_elapsed_time, d.execution_count,d.* 
FROM sys.dm_exec_procedure_stats AS d 
where OBJECT_NAME(object_id, database_id)='SPrptGetReturnTypeAvailabilityFrequencies'
ORDER BY [total_worker_time] DESC;

SELECT t.text,qs.plan_handle,qs.*,p.*
    FROM sys.dm_exec_query_stats                    [qs] 
CROSS APPLY sys.dm_exec_sql_text([qs].sql_handle)      [t]
CROSS APPLY sys.dm_exec_query_plan([qs].[plan_handle]) [p]
  WHERE [t].text LIKE '%SPcrdSingleMergeTradeExportAutoFX%'
    ORDER BY total_elapsed_time DESC
	
-- one month EQA Mar 2023 slowness   DBCC FREEPROCCACHE(0x02000000FB9DE429390EC06111AEA65DA03CFEC281DAE09F0000000000000000000000000000000000000000)
SELECT t.text,qs.plan_handle,qs.*,p.*
   FROM sys.dm_exec_query_stats                    [qs] 
CROSS APPLY sys.dm_exec_sql_text([qs].sql_handle)      [t]
CROSS APPLY sys.dm_exec_query_plan([qs].[plan_handle]) [p]
 WHERE  [t].text LIKE '%(@P0 int,@P1 int,@P2 int,@P3 datetime,@P4 datetime)SELECT ATTR_PERF_ATTRIBUTION.ATGAI_ID,ATTR_PERF_ATTRIBUTION.ATPTF_ID%'  and
  CAST(p.query_plan AS NVARCHAR(MAX)) LIKE '%IDX_AAM_ATTR_PERF_ATTRIBUTION_ATPTF_ID%'
and CAST(p.query_plan AS NVARCHAR(MAX))  NOT LIKE '%PERF_ATTRIB_END_DATE_IDX%'
    ORDER BY total_elapsed_time DESC
	
-- EQA YTD Top sql causing 40% cpu usage
SELECT t.text,qs.plan_handle,qs.*,p.*
    FROM sys.dm_exec_query_stats                    [qs] 
CROSS APPLY sys.dm_exec_sql_text([qs].sql_handle)      [t]
CROSS APPLY sys.dm_exec_query_plan([qs].[plan_handle]) [p]
  WHERE [t].text LIKE '(@P0 int,@P1 datetime,@P2 datetime,@P3 int,@P4 int,@P5 int,@P6 int)SELECT COUNT(1) FROM ATTR_PERF_ATTRIBUTION%'
    ORDER BY total_elapsed_time DESC
	
-- Search query plan using specific index
SELECT t.text,qs.plan_handle,qs.*,p.*
    FROM sys.dm_exec_query_stats                    [qs] 
CROSS APPLY sys.dm_exec_sql_text([qs].sql_handle)      [t]
CROSS APPLY sys.dm_exec_query_plan([qs].[plan_handle]) [p]
 WHERE  [t].text LIKE '(@P0 int,@P1 datetime,@P2 datetime,@P3 int,@P4 int,@P5 int,@P6 int)SELECT COUNT(1) FROM ATTR_PERF_ATTRIBUTION%'  and
  CAST(p.query_plan AS NVARCHAR(MAX)) LIKE '%PERF_ATTRIB_END_DATE_IDX%'
 -- CAST(p.query_plan AS NVARCHAR(MAX)) LIKE '%PERF_ATTRIB_CALCUL_DATE_IDX%'
    ORDER BY total_elapsed_time DESC
	
SELECT t.text,qs.plan_handle,qs.*,p.*
    FROM sys.dm_exec_query_stats                    [qs]
CROSS APPLY sys.dm_exec_sql_text([qs].sql_handle)      [t]
CROSS APPLY sys.dm_exec_query_plan([qs].[plan_handle]) [p]
    WHERE [t].text LIKE '%SPrptGetAllAccountMonthlyReturns%'
    ORDER BY total_elapsed_time DESC
-- June 1 2023 Add more conditions to below query to find bad plan then flush	
SELECT t.text,qs.plan_handle,qs.*,p.*
    FROM sys.dm_exec_query_stats                    [qs] 
CROSS APPLY sys.dm_exec_sql_text([qs].sql_handle)      [t]
CROSS APPLY sys.dm_exec_query_plan([qs].[plan_handle]) [p]
 WHERE  [t].text LIKE '%)SELECT ATTR_PERF_ATTRIBUTION.ATGAI_ID,ATTR_PERF_ATTRIBUTION.ATPTF_ID,ATTR_PERF_ATTRIBUTION.BENCH_ID,ATTR_PERF_ATTRIBUTION.ATINS_ID%'
    ORDER BY total_elapsed_time DESC

SELECT t.text,qs.plan_handle,qs.*,p.*
    FROM sys.dm_exec_query_stats                    [qs] 
CROSS APPLY sys.dm_exec_sql_text([qs].sql_handle)      [t]
CROSS APPLY sys.dm_exec_query_plan([qs].[plan_handle]) [p]
 WHERE  [t].text LIKE '%)SELECT MAX(INDEX_WEIGHTINGS.IDXW_DATE) FROM INDEX_WEIGHTINGS%'
    ORDER BY total_elapsed_time DESC	

-- proc plan	
SELECT TOP 20 d.object_id, d.database_id, OBJECT_NAME(object_id, database_id) 'proc name',  d.cached_time, d.last_execution_time, d.total_elapsed_time, d.total_elapsed_time/d.execution_count AS [avg_elapsed_time], d.last_elapsed_time, d.execution_count,d.* 
FROM sys.dm_exec_procedure_stats AS d -- where d.database_id=5 
ORDER BY [total_worker_time] DESC; 



exec [BISAMDW].[dbo].[aamSPIndexWeightPlanFlush]	
DBCC DROPCLEANBUFFERS -- run in dev/test only for perf testing
DBCC FREEPROCCACHE(plan_handle)
DBCC FREEPROCCACHE(0x02000000FB9DE429390EC06111AEA65DA03CFEC281DAE09F0000000000000000000000000000000000000000)

use BISAMDW
go
update statistics index_weightings

alter index idxname on db_name.dbo.table_name rebuild with(online=on, allow_page_locks=on ,maxdop=0)


-- When were Statistics last updated on all indexes?  (Query 71) (Statistics Update)
-- very slow
SELECT SCHEMA_NAME(o.Schema_ID) + N'.' + o.[NAME] AS [Object Name], o.[type_desc] AS [Object Type],
      i.[name] AS [Index Name], STATS_DATE(i.[object_id], i.index_id) AS [Statistics Date], 
      s.auto_created, s.no_recompute, s.user_created, s.is_incremental, s.is_temporary,
	  st.row_count, st.used_page_count
FROM sys.objects AS o WITH (NOLOCK)
INNER JOIN sys.indexes AS i WITH (NOLOCK)
ON o.[object_id] = i.[object_id]
INNER JOIN sys.stats AS s WITH (NOLOCK)
ON i.[object_id] = s.[object_id] 
AND i.index_id = s.stats_id
INNER JOIN sys.dm_db_partition_stats AS st WITH (NOLOCK)
ON o.[object_id] = st.[object_id]
AND i.[index_id] = st.[index_id]
WHERE o.[type] IN ('U', 'V')
AND st.row_count > 0
ORDER BY STATS_DATE(i.[object_id], i.index_id) DESC OPTION (RECOMPILE);
------  

-- Helps discover possible problems with out-of-date statistics
-- Also gives you an idea which indexes are the most active

DBCC SHOW_STATISTICS ("[acctperf].[AccountMonthlyReturnsBiSam]",[PK_acctperf_AccountMonthlyReturnsBiSam]);  
GO  


-- Look at most frequently modified indexes and statistics (Query 72) (Volatile Indexes)
SELECT o.[name] AS [Object Name], o.[object_id], o.[type_desc], s.[name] AS [Statistics Name], 
       s.stats_id, s.no_recompute, s.auto_created, s.is_incremental, s.is_temporary,
	   sp.modification_counter, sp.[rows], sp.rows_sampled, sp.last_updated
FROM sys.objects AS o WITH (NOLOCK)
INNER JOIN sys.stats AS s WITH (NOLOCK)
ON s.object_id = o.object_id
CROSS APPLY sys.dm_db_stats_properties(s.object_id, s.stats_id) AS sp
WHERE o.[type_desc] NOT IN (N'SYSTEM_TABLE', N'INTERNAL_TABLE')
AND sp.modification_counter > 0
ORDER BY sp.modification_counter DESC, o.name OPTION (RECOMPILE);
------

-- This helps you understand your workload and make better decisions about 
-- things like data compression and adding new indexes to a table

-- heap tables
SELECT SCH.name + '.' + TBL.name AS TableName
FROM sys.tables AS TBL
INNER JOIN sys.schemas AS SCH ON TBL.schema_id = SCH.schema_id
INNER JOIN sys.indexes AS IDX ON TBL.object_id = IDX.object_id AND IDX.type = 0
ORDER BY TableName
-- alter index idxname on db_name.dbo.table_name rebuild          alter index all on db_name.dbo.table_name rebuild [online]
--alter index idxname on db_name.dbo.table_name reorganize        alter index all on db_name.dbo.table_name reorganize [online]

-- Index Fragmentation check for single table
use db_name; use IndexData
 SELECT DB_NAME(ps.database_id) AS [Database Name], SCHEMA_NAME(o.[schema_id]) AS [Schema Name],
OBJECT_NAME(ps.OBJECT_ID) AS [Object Name], i.[name] AS [Index Name], ps.index_id, 
ps.index_type_desc, ps.avg_fragmentation_in_percent, 
ps.fragment_count, ps.page_count, i.fill_factor, i.has_filter, 
i.filter_definition, i.[allow_page_locks]
FROM sys.dm_db_index_physical_stats(DB_ID(),object_id('IndexData.dbo.idxConstituentReturns'), NULL, NULL , N'LIMITED') AS ps
INNER JOIN sys.indexes AS i WITH (NOLOCK)
ON ps.[object_id] = i.[object_id] 
AND ps.index_id = i.index_id
INNER JOIN sys.objects AS o WITH (NOLOCK)
ON i.[object_id] = o.[object_id] 
WHERE ps.database_id = DB_ID()
AND ps.page_count > 2500
ORDER BY ps.avg_fragmentation_in_percent DESC OPTION (RECOMPILE);

-- Get fragmentation info for all indexes above a certain size in the current database  (Query 73) (Index Fragmentation)
-- Note: This query could take some time on a very large database
SELECT DB_NAME(ps.database_id) AS [Database Name], SCHEMA_NAME(o.[schema_id]) AS [Schema Name],
OBJECT_NAME(ps.OBJECT_ID) AS [Object Name], i.[name] AS [Index Name], ps.index_id, 
ps.index_type_desc, ps.avg_fragmentation_in_percent, 
ps.fragment_count, ps.page_count, i.fill_factor, i.has_filter, 
i.filter_definition, i.[allow_page_locks]
FROM sys.dm_db_index_physical_stats(DB_ID(),NULL, NULL, NULL , N'LIMITED') AS ps
INNER JOIN sys.indexes AS i WITH (NOLOCK)
ON ps.[object_id] = i.[object_id] 
AND ps.index_id = i.index_id
INNER JOIN sys.objects AS o WITH (NOLOCK)
ON i.[object_id] = o.[object_id]
WHERE ps.database_id = DB_ID()
AND ps.page_count > 2500
ORDER BY ps.avg_fragmentation_in_percent DESC OPTION (RECOMPILE);
------

select db_name(database_id)as DBName,object_name(ind.object_id)TableName,ind.name as IndexName,ind.index_id,partition_number,
page_count,avg_fragmentation_in_percent,0 as Status,getdate()as CreatedDate 
from  sys.dm_db_index_physical_stats (DB_ID(), NULL, NULL , NULL, 'LIMITED') t1
join sys.indexes ind
on ind.index_id = t1.index_id 
and ind.object_id = t1.object_id
WHERE avg_fragmentation_in_percent > 10.0 AND ind.index_id =1 and page_count >1000

-- Helps determine whether you have framentation in your relational indexes
-- and how effective your index maintenance strategy is


--- Index Read/Write stats (all tables in current DB) ordered by Reads  (Query 74) (Overall Index Usage - Reads)
SELECT SCHEMA_NAME(t.[schema_id]) AS [SchemaName], OBJECT_NAME(i.[object_id]) AS [ObjectName], 
       i.[name] AS [IndexName], i.index_id, 
       s.user_seeks, s.user_scans, s.user_lookups,
	   s.user_seeks + s.user_scans + s.user_lookups AS [Total Reads], 
	   s.user_updates AS [Writes],  
	   i.[type_desc] AS [Index Type], i.fill_factor AS [Fill Factor], i.has_filter, i.filter_definition, 
	   s.last_user_scan, s.last_user_lookup, s.last_user_seek
FROM sys.indexes AS i WITH (NOLOCK)
LEFT OUTER JOIN sys.dm_db_index_usage_stats AS s WITH (NOLOCK)
ON i.[object_id] = s.[object_id]
AND i.index_id = s.index_id
AND s.database_id = DB_ID()
LEFT OUTER JOIN sys.tables AS t WITH (NOLOCK)
ON t.[object_id] = i.[object_id]
WHERE OBJECTPROPERTY(i.[object_id],'IsUserTable') = 1
ORDER BY s.user_seeks + s.user_scans + s.user_lookups DESC OPTION (RECOMPILE); -- Order by reads
------

-- Show which indexes in the current database are most active for Reads

sp_helpdb
go
SELECT SERVERPROPERTY('MachineName') AS ComputerName,SERVERPROPERTY('ServerName') AS InstanceName,SERVERPROPERTY('Edition') AS Edition,SERVERPROPERTY('ProductVersion') AS ProductVersion, SERVERPROPERTY('ProductLevel') AS ProductLevel;  
GO  
sp_whoisactive
go
select @@version,@@SERVERNAME


-- BOS-DBWH02 sql agent job - Update Problem Statistics
--UPDATE STATISTICS DataWarehouse.warehouse.bisamAttributions_Regn_Ind  -- 3 minutes runtime


SELECT  QUOTENAME(SCHEMA_NAME(sOBJ.schema_id)) + '.' + QUOTENAME(sOBJ.name) AS [TableName] , SUM(sPTN.Rows) AS [RowCount]
FROM   sys.objects AS sOBJ   INNER JOIN sys.partitions AS sPTN       ON sOBJ.object_id = sPTN.object_id
WHERE  sOBJ.type = 'U'    AND sOBJ.is_ms_shipped = 0x0    AND index_id < 2 -- 0:Heap, 1:Clustered
GROUP BY sOBJ.schema_id, sOBJ.name ORDER BY 2 desc

exec sp_help '[warehouse].[fund]';

/* update statistics 1.45 AM daily both takes 15 minutes
Delivery Team Folders-> team12-> BISAM -> BiSam ATTR_PERF_ATTRIBUTION statistics and Frank's aamSP_PtfKeyDates_to_bsmStateData
-- update statistics BISAMDW.dbo.ATTR_PERF_ATTRIBUTION;    -- 15 minutes
-- update statistics schema.table index_name;
-- update statistics [dbo].[INDEX_WEIGHTINGS]  -- update statistics for all indexes for a table
--update statistics [dbo].[INDEX_WEIGHTINGS] [IDX_INDEX_WEIGHTINGS]  -- update statics for specified index for a table
--update statistics [dbo].[INDEX_WEIGHTINGS] [IDX_INDEX_WEIGHTINGS] WITH SAMPLE 10 PERCENT;   -- runs longer

EXEC sp_updatestats;  --update statistics for all user-defined and internal tables in the database
*/

-- role extract
SET NOCOUNT ON
Use DataWarehouse;  -- ADJUST DB NAME
DECLARE @RoleName varchar(50) = 'ActiveBatchRole' --- PLACE ROLE NAME
SELECT 'CREATE ROLE ' + @RoleName + ';'+ char(13)
SELECT  'GRANT ' + prm.permission_name + ' ON ' + OBJECT_NAME(major_id) + ' TO ' + rol.name + ' ;' + char(13) COLLATE Latin1_General_CI_AS
from sys.database_permissions prm join sys.database_principals rol on prm.grantee_principal_id = rol.principal_id
where rol.name = @RoleName

-- For BISAM INT refresh failure
-- step 1) get list of all logs that are not applied till bisam night cycle
-- step 2) prepare script with all logs except last with NORECOVERY ( Do not mention keep_cdc)
-- step 2a) run the backup script to find full diff and log file names to create script
-- step 3) run last restore log with RECOVERY and KEEP_CDC
-- step 4) run With Recovery Restore logs - Set Permissions ( This sends refresh completion email) ( or Extract script from Activebatch and run)
-- step 5) -- Enable CDC if SQL agent job is missing on BISAMDW int or sandbox


					
-- To view the objects that depend on a table
SELECT * FROM sys.sql_expression_dependencies  WHERE referencing_id = OBJECT_ID(N'[dbo].[IndexDefragHistory2005]');   
--To view the dependencies of a table
SELECT * FROM sys.sql_expression_dependencies  WHERE referenced_id = OBJECT_ID(N'[dbo].[IndexDefragHistory2005]');   

EXEC sp_rename 'schema.Tablename', 'NewTableName'; 					

-- Restore mulitple logs WITH NORECOVERY
RESTORE LOG [BISAMDW] FROM  DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\LOG\EC2AMAZ-OSST82Q_BISAMDW_LOG_20211202_070000.TRN'   
 WITH NORECOVERY,FILE = 1,NOUNLOAD,  STATS = 10; -- norecovery
 -- RESTORE LAST LOG WITH RECOVERY
RESTORE LOG [BISAMDW] FROM  DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\LOG\EC2AMAZ-OSST82Q_BISAMDW_LOG_20230516_074500.TRN'  20230504_093000
 WITH  RECOVERY, FILE = 1,NOUNLOAD,  STATS = 10 , KEEP_CDC  -- last recovery and keep_cdc
 
 
--Database Backups last 24 hours
--------------------------------------------------------------------------------- 
SELECT  msdb.dbo.backupset.database_name,   msdb.dbo.backupset.backup_start_date,  msdb.dbo.backupset.backup_finish_date, CASE msdb..backupset.type 
WHEN 'D' THEN 'Database'     WHEN 'L' THEN 'Log'    END AS backup_type,  msdb.dbo.backupset.backup_size,  msdb.dbo.backupmediafamily.physical_device_name,
msdb.dbo.backupset.first_lsn,msdb.dbo.backupset.last_lsn
FROM msdb.dbo.backupmediafamily (nolock) INNER JOIN msdb.dbo.backupset (nolock) ON msdb.dbo.backupmediafamily.media_set_id = msdb.dbo.backupset.media_set_id 
WHERE (CONVERT(datetime, msdb.dbo.backupset.backup_start_date, 102) >= GETDATE() - 1) -- and msdb.dbo.backupset.database_name='BISAMDW'
ORDER BY    msdb.dbo.backupset.backup_finish_date desc

-- sql server error log location
SELECT SERVERPROPERTY('ErrorLogFileName') AS 'Error log file location';
EXEC xp_ReadErrorLog 0,1,N'BISAMDW',N'', N'2022-01-02 00:00:00.000', N'2022-01-10 00:00:00.000', N'desc'
EXEC xp_ReadErrorLog    -- sql server error log. 0 is current log   
EXEC xp_ReadErrorLog 0,1,N'BISAMDW' -- search sql server error log for BISAMDW character  
EXEC xp_ReadErrorLog 0
EXEC xp_ReadErrorLog 0,2 -- sql server agent log


--BISAM PROD Weekend Maintance SQL Agent job script for Index Reorg and Rebuild

EXEC sp_configure 'max degree of parallelism', 12
reconfigure with override

EXECUTE dbo.IndexOptimize
@Databases = 'USER_DATABASES',
@FragmentationLow = NULL,
@FragmentationMedium = 'INDEX_REORGANIZE,INDEX_REBUILD_ONLINE',
@FragmentationHigh = 'INDEX_REBUILD_ONLINE',
@FragmentationLevel1 = 5,
@FragmentationLevel2 = 30,
@PartitionLevel = 'Y',
@UpdateStatistics = 'ALL',
@OnlyModifiedStatistics = 'Y',
@LogToTable = 'Y',
@TimeLimit = 86400


EXEC sp_configure 'max degree of parallelism', 4
reconfigure with override

use performance;
select 'select count(*) from composites.'+name+' (nolock);' from sys.tables where schema_name(schema_id)='composites'

EXECUTE [dbo].[DatabaseBackup]
	@Databases	= 'BISAMDW'			-- BISAMDW Database
,	@Compress	= 'Y'				-- Use Backup Compression
,	@Directory	= NULL				-- Backup to default Backup directory
,	@BackupType	= 'FULL'			-- Full Backup
,	@Verify		= 'N'				-- Don't verify the Backups (done on system databases only)
--,	@CleanupTime	= 44				-- Cleanup old Backups after 44 hours (just under 2 days) after the most recent backup is taken ***FJC*** Kill this retention action, commented out
--,	@CleanupMode	= 'AFTER_BACKUP'	-- Cleanup old Backups after the new backup has been created
,	@BufferCount	= 200				-- BufferCount, TransferSize and NumberOfFiles based on initial testing
,	@MaxTransferSize	=	4194304
,	@NumberOfFiles	= 4
,	@CheckSum	= 'N'				-- Don't use Backup checksums
,	@FileExtensionFull	= N'BAK'			-- We keep file extensions consistent with AXYZ's existing backup file extensions
,	@FileExtensionDiff	= N'DIFF'
,	@FileExtensionLog	= N'TRN'
,	@LogToTable	= 'Y'				-- Log commands executed to [master].[dbo].[CommandLog]

-- use below for small database backups
EXECUTE [dbo].[DatabaseBackup]
	@Databases	= 'USER_DATABASES, -BISAMDW'	-- All User Databases, EXCEPT [BISAMDW]
,	@Compress	= 'Y'				-- Use Backup Compression
,	@Directory	= NULL				-- Backup to default Backup directory
,	@BackupType	= 'FULL'				-- Full Backup
,	@Verify		= 'N'				-- Don't verify the Backups (done on system databases only)
--,	@CleanupTime	= 188				-- Cleans up old backups after 188 hours (just under 8 days) after the most recent backup is taken ***FJC*** Kill this retention action, commented out
--,	@CleanupMode	= 'AFTER_BACKUP'		-- Cleanup old Backups after the new backup has been created
,	@BufferCount	= 100				-- BufferCount, TransferSize and NumberOfFiles based on initial testing
,	@MaxTransferSize	=	4194304
,	@NumberOfFiles	= 2
,	@CheckSum	= 'N'				-- Don't use Backup checksums
,	@FileExtensionFull	= N'BAK'			-- We keep file extensions consistent with AXYZ's existing backup file extensions
,	@FileExtensionDiff	= N'DIFF'
,	@FileExtensionLog	= N'TRN'
,	@LogToTable	= 'Y'				-- Log commands executed to [master].[dbo].[CommandLog]

SELECT session_id as SPID, command, a.text AS Query, start_time, percent_complete, dateadd(second,estimated_completion_time/1000, getdate()) as estimated_completion_time
FROM sys.dm_exec_requests r   CROSS APPLY sys.dm_exec_sql_text(r.sql_handle) a
WHERE r.command in ('BACKUP DATABASE','RESTORE DATABASE')
--If the database is being restored with NORECOVERY, the Undo phase is skipped. SQL Server does not show the progress during the Redo and Undo phases as it does in the Data Copy phase. So, depending upon the activity in the database at the time it was getting backed up will decide the overall total recovery time.

RESTORE DATABASE [ETLMetadata] FROM  
DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\ETLMetadata\FULL\EC2AMAZ-OSST82Q_ETLMetadata_FULL_20230101_003000_1.BAK',
DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\ETLMetadata\FULL\EC2AMAZ-OSST82Q_ETLMetadata_FULL_20230101_003000_2.BAK' 
WITH  FILE = 1,  MOVE   N'ETLMetaData' TO N'D:\Data\ETLMetaData.mdf',  MOVE  N'ETLMetaData_log' TO N'L:\Log\ETLMetaData_log.ldf',  
NORECOVERY,  NOUNLOAD,  REPLACE,  STATS = 10, BUFFERCOUNT = 100,  MAXTRANSFERSIZE = 4194304

RESTORE DATABASE [ETLMetadata] FROM  
DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\ETLMetadata\DIFF\EC2AMAZ-OSST82Q_ETLMetadata_DIFF_20230107_183000.DIFF'
 WITH  FILE = 1,  MOVE N'ETLMetaData' TO N'D:\Data\ETLMetaData.mdf',  MOVE N'ETLMetaData_log' TO   N'L:\Log\ETLMetaData_log.ldf',
 RECOVERY, KEEP_CDC, NOUNLOAD,  REPLACE, STATS = 10,  BUFFERCOUNT = 100,  MAXTRANSFERSIZE = 4194304
 
 -- NORECOVERY
-- RECOVERY, , KEEP_CDC, NOUNLOAD,  REPLACE, STATS = 10,  BUFFERCOUNT = 100,  MAXTRANSFERSIZE = 4194304 					   
-- use RECOVERY, KEEP_CDC depending on recovery till DIFF back or LOG

RESTORE LOG [ETLMetadata] FROM  DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\ETLMetadata\LOG\EC2AMAZ-OSST82Q_ETLMetadata_LOG_20211124_053000.TRN'
 WITH  FILE = 1, NOUNLOAD,  STATS = 10 , NORECOVERY
--RECOVERY, KEEP_CDC  -- use RECOVERY, KEEP_CDC ON FULL DIFF LAST LOG depending on recovery till DIFF back or LOG

-- Recovery step when FULL and DIFF completes and Tran log fails. Get time from BISAM Overnight email 
-- Get list of Tran logs for BISAM INT recovery
SELECT  msdb.dbo.backupset.database_name,   msdb.dbo.backupset.backup_start_date,  msdb.dbo.backupset.backup_finish_date, CASE msdb..backupset.type 
WHEN 'D' THEN 'Database'     WHEN 'L' THEN 'Log'    END AS backup_type,  msdb.dbo.backupset.backup_size,  msdb.dbo.backupmediafamily.physical_device_name,
msdb.dbo.backupset.first_lsn,msdb.dbo.backupset.last_lsn
FROM msdb.dbo.backupmediafamily (nolock) INNER JOIN msdb.dbo.backupset (nolock) ON msdb.dbo.backupmediafamily.media_set_id = msdb.dbo.backupset.media_set_id 
WHERE (CONVERT(datetime, msdb.dbo.backupset.backup_start_date, 102) >= GETDATE() - 1) and msdb.dbo.backupset.database_name='BISAMDW'
and msdb..backupset.type='L'
ORDER BY    msdb.dbo.backupset.backup_finish_date asc

--Extract files in SSMS and replace below for all files except last
RESTORE LOG [BISAMDW] FROM  DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\LOG\EC2AMAZ-OSST82Q_BISAMDW_LOG_20211124_053000.TRN' 
 WITH  FILE = 1, NOUNLOAD,  STATS = 10 , NORECOVERY

--  H:\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\LOG\  -> RESTORE LOG [BISAMDW] FROM  DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\LOG\
--  .TRN  -> .TRN' WITH  FILE = 1, NOUNLOAD,  STATS = 10 , NORECOVERY
-- Replace above 2 with last Tran Log and use Recover and KEEP_CDC 
 
 
-- Restore bisamdw in sbox1, int has restore full,diff and logs steps
-- use active batch to rerun restore, takes 2 hours (sbox1 runs full and diff restore, no status for diff)
-- used in int
A previous restore operation was interrupted and did not complete processing on file .
 Either restore the backup set that was interrupted or restart the restore sequence
   RESTORE LOG [BISAMDW] FROM  DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\LOG\EC2AMAZ-OSST82Q_BISAMDW_LOG_20220607_004500.TRN' 
 WITH   FILE = 1, NORECOVERY,  NOUNLOAD,  STATS = 10, CONTINUE_AFTER_ERROR; ---------------------------

RESTORE LOG [BISAMDW] FROM  DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\LOG\EC2AMAZ-OSST82Q_BISAMDW_LOG_20211124_053000.TRN' 
WITH  FILE = 1, NOUNLOAD,  STATS = 10 , KEEP_CDC

-- **** Extract file list from windows cmd, create NORECOVERY and last RECOVERY KEEP_CDC script, run AB job for permissions

Stop Sandbox Active batch  These will stop Bone_user connections to DB for refresh ****************
/Jobs Plans and Folders/Delivery Team Folders/TEAM12/USE1-SBox_BiSam_Utilities/USE1-SBox_Stop_BiSamDataMartLoaderService
/Jobs Plans and Folders/Delivery Team Folders/TEAM12/USE1-SBox_BiSam_Utilities/USE1-SBox_Stop_BiSam_Services

use master
go
RESTORE DATABASE [BISAMDW] FROM 
DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\FULL\EC2AMAZ-OSST82Q_BISAMDW_FULL_20220129_193002_1.BAK',  
DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\FULL\EC2AMAZ-OSST82Q_BISAMDW_FULL_20220129_193002_2.BAK', 
DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\FULL\EC2AMAZ-OSST82Q_BISAMDW_FULL_20220129_193002_3.BAK',
DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\FULL\EC2AMAZ-OSST82Q_BISAMDW_FULL_20220129_193002_4.BAK'
WITH  FILE = 1,MOVE N'BISAMDW' TO N'D:\Data\BISAMDW.mdf',MOVE N'BISAMDW2' TO N'E:\Data2\BISAMDW2.ndf', 
MOVE  N'BISAMDW3' TO N'F:\Data3\BISAMDW3.ndf',  MOVE N'BISAMDW4' TO N'G:\Data4\BISAMDW4.ndf',
MOVE  N'BISAMDW_CDC' TO N'D:\Data\BISAMDW_CDC.ndf',  MOVE N'BISAMDW_CDC_ATTR_PERF' TO N'E:\DATA2\BISAMDW_CDC_ATTR_PERF.ndf',
MOVE  N'BISAMDW_CDC_DATA' TO  N'K:\Data5\BISAMDW_CDC_DATA.ndf',  MOVE N'BISAMDW_log'   TO N'L:\Log\BISAMDW_log.ldf',
NORECOVERY,  NOUNLOAD, REPLACE,  STATS = 5   -- restoring full with NORECOVERY option


RESTORE DATABASE [BISAMDW] FROM  
DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\DIFF\EC2AMAZ-OSST82Q_BISAMDW_DIFF_20220201_193002_1.DIFF',  
DISK = N'\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\DIFF\EC2AMAZ-OSST82Q_BISAMDW_DIFF_20220201_193002_2.DIFF'
WITH  FILE = 1,  MOVE N'BISAMDW' TO N'D:\Data\BISAMDW.mdf',  MOVE N'BISAMDW2' TO  N'E:\Data2\BISAMDW2.ndf',  
MOVE N'BISAMDW3' TO  N'F:\Data3\BISAMDW3.ndf',  MOVE N'BISAMDW4' TO  N'G:\Data4\BISAMDW4.ndf', 
MOVE N'BISAMDW_CDC' TO N'D:\Data\BISAMDW_CDC.ndf',  MOVE  N'BISAMDW_CDC_ATTR_PERF' TO  N'E:\DATA2\BISAMDW_CDC_ATTR_PERF.ndf',
MOVE   N'BISAMDW_CDC_DATA' TO  N'K:\Data5\BISAMDW_CDC_DATA.ndf',  MOVE N'BISAMDW_log'   TO N'L:\Log\BISAMDW_log.ldf',
NORECOVERY,  NOUNLOAD, REPLACE,  STATS = 5    -- use NORECOVERY for BISAM INT Diff restore, use RECOVERY, KEEP_CDC	with last tran log restore
RECOVERY, KEEP_CDC	, REPLACE,  STATS = 5	    -- use RECOVERY and KEEP_CDC for BISAM Sandbox1 Diff restore, 
-- Run post refresh AB job

Sbox1 ETLMetadata 1) Full & Diff  2) NoRecovery  3) Recovery KeepCDC
# uncomment after 3/20 refresh Restore-DbaDatabase -SqlInstance 'use1-sbox-db01.sandbox.AXYZ.am' -Path '\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\ETLMetadata\FULL','\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\ETLMetadata\DIFF' -MaxTransferSize 4194304 -BufferCount 100 -WithReplace -ReuseSourceFolderStructure -KeepCDC

#Restore-DbaDatabase -SqlInstance 'use1-sbox-db01.sandbox.AXYZ.am' -DatabaseName "ETLMetadata" -ReplaceDbNameInFile -Path '\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\ETLMetadata\FULL','\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\ETLMetadata\DIFF' -WithReplace -NoRecovery -ReuseSourceFolderStructure -EnableException -WarningAction Stop
#Restore-DbaDatabase -SqlInstance 'use1-sbox-db01.sandbox.AXYZ.am' -DatabaseName "ETLMetadata" -ReplaceDbNameInFile -Path '\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\ETLMetadata\LOG' -WithReplace -NoRecovery -Continue
#Restore-DbaDatabase -SqlInstance 'use1-sbox-db01.sandbox.AXYZ.am' -DatabaseName "ETLMetadata" -ReplaceDbNameInFile -Path '\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\ETLMetadata\LOG' -WithReplace -KeepCDC -Continue -EnableException -WarningAction Stop # @WarningToDo -W


Sbox1 BISAMDW 1) Full & Diff  2) NoRecovery  3) Recovery KeepCDC
#Restore-DbaDatabase -SqlInstance 'use1-sbox-db01.sandbox.AXYZ.am' -Path '\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\FULL','\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\DIFF' -WithReplace -NoRecovery -ReuseSourceFolderStructure -EnableException -WarningAction Stop
#Restore-DbaDatabase -SqlInstance 'use1-sbox-db01.sandbox.AXYZ.am' -Path '\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\LOG' -WithReplace -NoRecovery -Continue
#Restore-DbaDatabase -SqlInstance 'use1-sbox-db01.sandbox.AXYZ.am' -Path '\\use1-prod-db01.AXYZ.am\BACKUP\EC2AMAZ-OSST82Q\BISAMDW\LOG' -WithReplace -KeepCDC -Continue -EnableException -WarningAction Stop # @WarningToDo -W


**Morning BISAMDW comment Full+Diff
Run NoRecovery, then comment
Run Recovery CDC

					   
-- Table size				   
SELECT  t.NAME AS TableName, s.Name AS SchemaName, p.rows, SUM(a.total_pages) * 8 AS TotalSpaceKB, 
    CAST(ROUND(((SUM(a.total_pages) * 8) / 1024.00), 2) AS NUMERIC(36, 2)) AS TotalSpaceMB,
    SUM(a.used_pages) * 8 AS UsedSpaceKB,  CAST(ROUND(((SUM(a.used_pages) * 8) / 1024.00), 2) AS NUMERIC(36, 2)) AS UsedSpaceMB, 
    (SUM(a.total_pages) - SUM(a.used_pages)) * 8 AS UnusedSpaceKB,   CAST(ROUND(((SUM(a.total_pages) - SUM(a.used_pages)) * 8) / 1024.00, 2) AS NUMERIC(36, 2)) AS UnusedSpaceMB
FROM     sys.tables t INNER JOIN  sys.indexes i ON t.OBJECT_ID = i.object_id
INNER JOIN  sys.partitions p ON i.object_id = p.OBJECT_ID AND i.index_id = p.index_id
INNER JOIN  sys.allocation_units a ON p.partition_id = a.container_id
LEFT OUTER JOIN sys.schemas s ON t.schema_id = s.schema_id
WHERE  t.NAME NOT LIKE 'dt%'   AND t.is_ms_shipped = 0   AND i.OBJECT_ID > 255 
GROUP BY   t.Name, s.Name, p.Rows ORDER BY   TotalSpaceMB DESC, t.Name
-- This will calculate size for each table partition, remove p.Rows in group by to get total MB size

-- update statistics powershell script modification_counter >20000 Active Batch job runs at 10 PM daily
$hostnames =  Invoke-Sqlcmd -ServerInstance BOS-DBCENTRAL01 -Database DBMetrics -Query "select ServerName as ServerName From dbo.dbaHealthCheckServers  Where ServerName in ('BOS-DB02')"  # Get-Content $server_file
ForEach ($hostname in $hostnames) { 
$results = Invoke-Sqlcmd -ServerInstance $hostname.ServerName -Query "Select name dbname From sys.databases d where d.database_id > 4 AND d.name <> 'Scratch' AND is_read_only = 0 Order By 1"
ForEach ($result in $results) {
$statsresults = Invoke-Sqlcmd -ServerInstance $hostname.ServerName -Database $result.dbname -Query "SELECT DB_Name() DatabaseName, OBJECT_SCHEMA_NAME(obj.object_id) schemaName, obj.name TableName, 
            stat.name, modification_counter, 
            [rows], rows_sampled, rows_sampled* 100 / [rows] AS [% Rows Sampled],
            last_updated
FROM        sys.objects AS obj
INNER JOIN  sys.stats AS stat ON stat.object_id = obj.object_id
CROSS APPLY sys.dm_db_stats_properties(stat.object_id, stat.stats_id) AS sp
WHERE       obj.is_ms_shipped = 0
and last_updated is not null and modification_counter > 20000
--AND last_updated < DateAdd(day, -8,GetDate())
AND [rows] >= 20000
AND rows_sampled * 100 / [rows] > 10
ORDER BY    last_updated , modification_counter DESC"
#$statsresults #| Export-Csv -Path $filename -NoTypeInformation -Append
ForEach ($stats in $statsresults) {
$variables = @(
    "Var1 = '$stats.TableName'",
    "Var2 = '$stats.name'"
)
$query = "Update Statistics " + $stats.schemaName + "." + $stats.TableName + " " + $stats.name #+ " -- " + $stats.DatabaseName + " " + $hostname.ServerName
Invoke-Sqlcmd -ServerInstance $hostname.ServerName -Database $stats.DatabaseName -Query $query 


    }
}
}

https://docs.microsoft.com/en-us/sql/t-sql/statements/alter-authorization-transact-sql?view=sql-server-ver15 
Use DataWarehouse
GO
DECLARE @Command VARCHAR(MAX) = 'ALTER AUTHORIZATION ON DATABASE::[<<DatabaseName>>] TO 
[<<LoginName>>]' 

SELECT @Command = REPLACE(REPLACE(@Command 
            , '<<DatabaseName>>', SD.Name)
            , '<<LoginName>>', SL.Name)
FROM master..sysdatabases SD 
JOIN master..syslogins SL ON  SD.SID = SL.SID
WHERE  SD.Name = DB_NAME()

PRINT @Command
EXEC(@Command)


--ALTER AUTHORIZATION ON DATABASE::[DataWarehouse] TO [AXYZ\SQLDEV]
--ALTER AUTHORIZATION ON DATABASE::[DataWarehouse] TO [AXYZ\svc_devboneetl]


-- list all filegroups
select * from sys.data_spaces where type='FG'
-- filegroups which has a corresponding allocation(table, index)
select FILEGROUP_NAME(data_space_id),* from sys.allocation_units 
where data_space_id=4 -- 4 for CDC_DATA_ATTR_PERF
-- Filegroup and corresponding Table and Index and size
SELECT FILEGROUP_NAME(AU.data_space_id) AS FileGroup,OBJECT_NAME(Parti.object_id) AS TableName,
ind.name AS ClusteredIndexName,AU.data_pages/128 AS DataSize_MB 
FROM sys.allocation_units AS AU INNER JOIN sys.partitions AS Parti 
ON AU.container_id = CASE WHEN AU.type in(1,3) THEN Parti.hobt_id ELSE Parti.partition_id END
LEFT JOIN sys.indexes AS ind ON ind.object_id = Parti.object_id AND ind.index_id = Parti.index_id
--where FILEGROUP_NAME(AU.data_space_id)='CDC_DATA_ATTR_PERF'
ORDER BY FILEGROUP_NAME(AU.data_space_id), AU.total_pages/128 DESC

select * from msdb.dbo.sysmail_mailitems order by send_request_date desc
	EXEC msdb.dbo.sp_send_dbmail 
		@recipients = 'rkumar@AXYZ-asset.com', 
		@subject = @Subject,
		@from_address = 'activefx@AXYZ-asset.com',
		@importance='High',
		@body_format = 'TEXT',
		@body = @Body


-- extract role grants for a user ----------------------------------------------------------------------------------------------------
SELECT 'EXEC sp_addrolemember ''' + DBRole.NAME + ''', ''' + DBUser.NAME + '''' AS '--Add Users to Database Roles--'
FROM sys.database_principals DBUser
INNER JOIN sys.database_role_members DBM ON DBM.member_principal_id = DBUser.principal_id
INNER JOIN sys.database_principals DBRole ON DBRole.principal_id = DBM.role_principal_id
and DBUser.NAME='AXYZ\svc_actvbsqluser'
----------------------------------------------------------------------------------------------------------------------------------------------

-- June 1 2022 ,after increasing column size from 12 to 40, Table views were throwing error from linked server(bisam to dbcore), below is the fix
use AXYZ
go
exec sp_refreshview '[bisam].[VWbsmNAVExtract]'
go
exec sp_refreshview '[bisam].[VWbsmTax-CAExtract]'
go
SELECT *  FROM [L-DBCORE].[AXYZ].[bisam].[VWbsmTax-CAExtract] where ExtractId = 149225

-- Role extract script 1 starts here ----------------------------------------------------------------------------------------------
use DataWarehouse
go
DECLARE @roleName VARCHAR(255)
SET @roleName = 'PerformanceAndAttributionReportingRole'

-- Script out the Role
DECLARE @roleDesc VARCHAR(MAX), @crlf VARCHAR(2)
SET @crlf = CHAR(13) + CHAR(10)
SET @roleDesc = 'CREATE ROLE [' + @roleName + ']' + @crlf + 'GO' + @crlf + @crlf

SELECT    @roleDesc = @roleDesc +
        CASE dp.state
            WHEN 'D' THEN 'DENY '
            WHEN 'G' THEN 'GRANT '
            WHEN 'R' THEN 'REVOKE '
            WHEN 'W' THEN 'GRANT '
        END + 
        dp.permission_name + ' ' +
        CASE dp.class
            WHEN 0 THEN ''
            WHEN 1 THEN --table or column subset on the table
                CASE WHEN dp.major_id < 0 THEN
                    + 'ON [sys].[' + OBJECT_NAME(dp.major_id) + '] '
                ELSE
                    + 'ON [' +
                    (SELECT SCHEMA_NAME(schema_id) + '].[' + name FROM sys.objects WHERE object_id = dp.major_id)
                        + -- optionally concatenate column names
                    CASE WHEN MAX(dp.minor_id) > 0 
                         THEN '] ([' + REPLACE(
                                        (SELECT name + '], [' 
                                         FROM sys.columns 
                                         WHERE object_id = dp.major_id 
                                            AND column_id IN (SELECT minor_id 
                                                              FROM sys.database_permissions 
                                                              WHERE major_id = dp.major_id
                                                                AND USER_NAME(grantee_principal_id) IN (@roleName)
                                                             )
                                         FOR XML PATH('')
                                        ) --replace final square bracket pair
                                    + '])', ', []', '')
                         ELSE ']'
                    END + ' '
                END
            WHEN 3 THEN 'ON SCHEMA::[' + SCHEMA_NAME(dp.major_id) + '] '
            WHEN 4 THEN 'ON ' + (SELECT RIGHT(type_desc, 4) + '::[' + name FROM sys.database_principals WHERE principal_id = dp.major_id) + '] '
            WHEN 5 THEN 'ON ASSEMBLY::[' + (SELECT name FROM sys.assemblies WHERE assembly_id = dp.major_id) + '] '
            WHEN 6 THEN 'ON TYPE::[' + (SELECT name FROM sys.types WHERE user_type_id = dp.major_id) + '] '
            WHEN 10 THEN 'ON XML SCHEMA COLLECTION::[' + (SELECT SCHEMA_NAME(schema_id) + '.' + name FROM sys.xml_schema_collections WHERE xml_collection_id = dp.major_id) + '] '
            WHEN 15 THEN 'ON MESSAGE TYPE::[' + (SELECT name FROM sys.service_message_types WHERE message_type_id = dp.major_id) + '] '
            WHEN 16 THEN 'ON CONTRACT::[' + (SELECT name FROM sys.service_contracts WHERE service_contract_id = dp.major_id) + '] '
            WHEN 17 THEN 'ON SERVICE::[' + (SELECT name FROM sys.services WHERE service_id = dp.major_id) + '] '
            WHEN 18 THEN 'ON REMOTE SERVICE BINDING::[' + (SELECT name FROM sys.remote_service_bindings WHERE remote_service_binding_id = dp.major_id) + '] '
            WHEN 19 THEN 'ON ROUTE::[' + (SELECT name FROM sys.routes WHERE route_id = dp.major_id) + '] '
            WHEN 23 THEN 'ON FULLTEXT CATALOG::[' + (SELECT name FROM sys.fulltext_catalogs WHERE fulltext_catalog_id = dp.major_id) + '] '
            WHEN 24 THEN 'ON SYMMETRIC KEY::[' + (SELECT name FROM sys.symmetric_keys WHERE symmetric_key_id = dp.major_id) + '] '
            WHEN 25 THEN 'ON CERTIFICATE::[' + (SELECT name FROM sys.certificates WHERE certificate_id = dp.major_id) + '] '
            WHEN 26 THEN 'ON ASYMMETRIC KEY::[' + (SELECT name FROM sys.asymmetric_keys WHERE asymmetric_key_id = dp.major_id) + '] '
         END COLLATE SQL_Latin1_General_CP1_CI_AS
         + 'TO [' + @roleName + ']' + 
         CASE dp.state WHEN 'W' THEN ' WITH GRANT OPTION' ELSE '' END + @crlf
FROM    sys.database_permissions dp
WHERE    USER_NAME(dp.grantee_principal_id) IN (@roleName)
GROUP BY dp.state, dp.major_id, dp.permission_name, dp.class

SELECT @roleDesc = @roleDesc + 'GO' + @crlf + @crlf      

-- Display users within Role.  Code stubbed by Joe Spivey
SELECT  @roleDesc = @roleDesc + 'EXECUTE sp_AddRoleMember ''' + roles.name + ''', ''' + users.name + '''' + @crlf
FROM    sys.database_principals users
        INNER JOIN sys.database_role_members link 
            ON link.member_principal_id = users.principal_id
        INNER JOIN sys.database_principals roles 
            ON roles.principal_id = link.role_principal_id
WHERE   roles.name = @roleName

-- PRINT out in blocks of up to 8000 based on last \r\n
DECLARE @printCur INT
SET @printCur = 8000

WHILE LEN(@roleDesc) > 8000
BEGIN
    -- Reverse first 8000 characters and look for first lf cr (reversed crlf) as delimiter
    SET @printCur = 8000 - CHARINDEX(CHAR(10) + CHAR(13), REVERSE(SUBSTRING(@roleDesc, 0, 8000)))

    PRINT LEFT(@roleDesc, @printCur)
    SELECT @roleDesc = RIGHT(@roleDesc, LEN(@roleDesc) - @printCur)
END

-- Output new permissions
PRINT @roleDesc + 'GO'
-- Role extract script 1  ends  ----------------------------------------------------------------------------------------------



-- Role extract script 2 starts ----------------------------------------------------------------------------------------------

WITH    perms_cte as
(
        select USER_NAME(p.grantee_principal_id) AS principal_name,
                dp.principal_id,
                dp.type_desc AS principal_type_desc,
                p.class_desc,
                OBJECT_NAME(p.major_id) AS object_name,
                p.permission_name,
                p.state_desc AS permission_state_desc
        from    sys.database_permissions p
        inner   JOIN sys.database_principals dp
        on     p.grantee_principal_id = dp.principal_id
)
--role members
-- add schema name
SELECT  concat( p.permission_state_desc,' ',p.permission_name,' on warehouse.',p.object_name,' to ',rm.role_name)
FROM    perms_cte p
right outer JOIN (
    select role_principal_id, dp.type_desc as principal_type_desc, 
   member_principal_id,user_name(member_principal_id) as member_principal_name,
   user_name(role_principal_id) as role_name--,*
    from    sys.database_role_members rm
    INNER   JOIN sys.database_principals dp
    ON     rm.member_principal_id = dp.principal_id and user_name(role_principal_id) in('PerformanceAndAttributionReportingRole','WebAnalyticsRole')
	and user_name(member_principal_id)='sql_devreportingservice'
) rm
ON     rm.role_principal_id = p.principal_id

order by 1

-- role extract script2 ends here ----------------------------------------------------------------------------------------------



-- powershell to capture DB stats
$hostname =  ("BOS-DBWH02") 
$db = ("AccountPerformance")
$statsresults = Invoke-Sqlcmd -ServerInstance $hostname -Database $db -Query "SELECT DB_Name() DatabaseName, OBJECT_SCHEMA_NAME(obj.object_id) schemaName, obj.name TableName, 
            stat.name, modification_counter, 
            [rows], rows_sampled, rows_sampled* 100 / [rows] AS [% Rows Sampled],
            last_updated
FROM        sys.objects AS obj
INNER JOIN  sys.stats AS stat ON stat.object_id = obj.object_id
CROSS APPLY sys.dm_db_stats_properties(stat.object_id, stat.stats_id) AS sp
WHERE       obj.is_ms_shipped = 0
and last_updated is not null and modification_counter > 20000
AND [rows] >= 20000
AND rows_sampled * 100 / [rows] > 10
ORDER BY    last_updated , modification_counter DESC
"

ForEach ($stats in $statsresults) {
$variables = @(
    "Var1 = '$stats.TableName'",
    "Var2 = '$stats.name'"
)
$query = "Update Statistics " + $stats.schemaName + "." + $stats.TableName + " " + $stats.name 
Invoke-Sqlcmd -ServerInstance $hostname -Database $stats.DatabaseName -Query $query 

    }	
-- powershell to capture DB stats ends here	


--Windows disk space powershell

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This procedure runs DBCC FREEPROCCACHE to flush longest running plan hash based on total_elapsed_time and using PERF_ATTRIB_END_DATE_IDX' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'aamSPAttrPerfAttributionCountPlanFlush'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Sample_Call', @value=N'exec BISAMDW.dbo.aamSPAttrPerfAttributionCountPlanFlush;' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'PROCEDURE',@level1name=N'aamSPAttrPerfAttributionCountPlanFlush'
GO

Get-WmiObject -Class Win32_LogicalDisk |
Select-Object -Property DeviceID, VolumeName, @{Label='FreeSpace (Gb)'; expression={($_.FreeSpace/1GB).ToString('F2')}},
@{Label='Total (Gb)'; expression={($_.Size/1GB).ToString('F2')}},
@{label='FreePercent'; expression={[Math]::Round(($_.freespace / $_.size) * 100, 2)}}|ft
		
 SELECT [MappingId],[LoginName],[LoginTypeId] ,[ParentMappingId]
  FROM [master].[dbo].[ServiceAccountMapping]  where LoginName like 'svc%' order by MappingId

 exec sp_helplogins 'svc_qasnowperf' 
 exec sp_helplogins 'svc_qasqltableau'	
 -- sp_helprotect grants to a Role, run for each database, does not return info about Securables
use Optimizer   sp_helprotect NULL,'AAMTableauReportsRole'         use IdexData   sp_helprotect NULL,'pag_dq_check'

					   
 -- make sure that DB grants in dev,qa are not wiped after DB refresh from prod
C:\dev\git_repo\performance\acct-perf-master\database-mssql\dbwh02\AccountPerformance\principals\roles\
 use AccountPerformance
go
if not exists(select * from sys.database_principals where type = 'R' and name = 'ActiveBatchRole')
begin
create role ActiveBatchRole
end
GRANT SELECT,INSERT,UPDATE,DELETE,EXECUTE ON SCHEMA :: [acctperf] TO ActiveBatchRole

USE AccountPerformance

DECLARE @Environment VARCHAR(5)
EXEC DataWarehouse.dbo.sp_get_environment @Environment=@Environment OUTPUT

IF @Environment='DEV'
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.database_principals where type = 'U' and name = 'AXYZ\svc_actvbsqlusertst')
	BEGIN
	   PRINT 'Creating svc_actvbsqlusertst user'
	   create user [AXYZ\svc_actvbsqlusertst] from login [AXYZ\svc_actvbsqlusertst]
	END
	ALTER ROLE ActiveBatchRole ADD MEMBER [AXYZ\svc_actvbsqlusertst]
END

IF @Environment='QA'
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.database_principals where type = 'U' and name = 'AXYZ\svc_actvbsqlusertst')
	BEGIN
	   PRINT 'Creating svc_actvbsqlusertst user'
	   create user [AXYZ\svc_actvbsqlusertst] from login [AXYZ\svc_actvbsqlusertst]
	END
	ALTER ROLE ActiveBatchRole ADD MEMBER [AXYZ\svc_actvbsqlusertst]
END

IF @Environment='UAT'
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.database_principals where type = 'U' and name = 'AXYZ\svc_actvbsqlusertst')
	BEGIN
	   PRINT 'Creating svc_actvbsqlusertst user'
	   create user [AXYZ\svc_actvbsqlusertst] from login [AXYZ\svc_actvbsqlusertst]
	END
	ALTER ROLE ActiveBatchRole ADD MEMBER [AXYZ\svc_actvbsqlusertst]
END

IF @Environment='PROD'
BEGIN
	IF NOT EXISTS (SELECT * FROM sys.database_principals where type = 'U' and name = 'AXYZ\svc_actvbsqluser')
	BEGIN
	   PRINT 'Creating svc_actvbsqluser user'
	   create user [AXYZ\svc_actvbsqluser] from login [AXYZ\svc_actvbsqluser]
	END
	ALTER ROLE ActiveBatchRole ADD MEMBER [AXYZ\svc_actvbsqluser]
END


 
USE [performance]
GO

DECLARE @Environment VARCHAR(5);
EXEC master.dbo.sp_get_environment @Environment=@Environment OUTPUT;

IF @Environment='DEV'
begin
    IF NOT EXISTS(select *
    from sys.database_principals
    where name = 'svc_devsnowperf')
	BEGIN
        CREATE USER svc_devsnowperf FOR LOGIN [svc_devsnowperf]
    END
    ALTER USER svc_devsnowperf WITH DEFAULT_SCHEMA=[dbo]
    GRANT CONNECT TO svc_devsnowperf

    ALTER ROLE [AAMSnowPerfRole] ADD MEMBER svc_devsnowperf
end

IF @Environment='QA'
begin
    IF NOT EXISTS(select *
    from sys.database_principals
    where name = 'svc_qasnowperf')
	BEGIN
        CREATE USER svc_qasnowperf FOR LOGIN [svc_qasnowperf]
    END
    ALTER USER svc_qasnowperf WITH DEFAULT_SCHEMA=[dbo]
    GRANT CONNECT TO svc_qasnowperf

    ALTER ROLE [AAMSnowPerfRole] ADD MEMBER svc_qasnowperf
end

IF @Environment='PROD'
begin
    IF NOT EXISTS(select *
    from sys.database_principals
    where name = 'svc_snowperf')
	BEGIN
        CREATE USER svc_snowperf FOR LOGIN [svc_snowperf]
    END
    ALTER USER svc_snowperf WITH DEFAULT_SCHEMA=[dbo]
    GRANT CONNECT TO svc_snowperf

    ALTER ROLE [AAMSnowPerfRole] ADD MEMBER svc_snowperf
end
					   
	



----on BISAM Prod ( use1-prod-db01)
https://git.AXYZ-asset.com/bisam/database-mssql/-/blob/master/DBBONE01/master/Principals/Logins/svc_sqlweb.sql
 svc_sqlweb.sql 
USE master
 
DECLARE @Environment VARCHAR(5)
EXEC sp_get_environment @Environment=@Environment OUTPUT
PRINT @Environment

IF @Environment='SBOX'
BEGIN
    IF NOT EXISTS (SELECT name FROM [sys].[server_principals] WHERE name = N'AXYZ\svc_devsqlrs')
       CREATE LOGIN [AXYZ\svc_devsqlrs] FROM WINDOWS WITH DEFAULT_DATABASE=[master]
END

IF @Environment='INT'
BEGIN
    IF NOT EXISTS (SELECT name FROM [sys].[server_principals] WHERE name = N'AXYZ\svc_qasqlrs')
       CREATE LOGIN [AXYZ\svc_qasqlrs] FROM WINDOWS WITH DEFAULT_DATABASE=[master]
END

IF @Environment='PROD'
BEGIN
    IF NOT EXISTS (SELECT name FROM [sys].[server_principals] WHERE name = N'AXYZ\svc_sqlweb')
       CREATE LOGIN [AXYZ\svc_sqlweb] FROM WINDOWS WITH DEFAULT_DATABASE=[master]
END

	

					   
DECLARE @today date
SELECT @today = getdate()
select dateadd(day, (-1 * datepart(day, @today)) + 1, @today) as first_day_of_curr_month
select dateadd(day, -1, dateadd(month, 1, dateadd(day, (-1 * datepart(day, @today)) + 1, @today))) as last_day_of_curr_month					   
					   
 
-- Script to get data between start LSN and end LSN or date time from CDC CT tables ----------------------------------------------
use accounting
go

declare @StartTS datetime = '2022-05-06 00:00:00 AM',
        @StartLSN binary(10),
        @EndTS datetime  = '2022-05-09 08:00:00 AM',
        @EndLSN binary(10)

select @StartLSN = sys.fn_cdc_map_time_to_lsn('smallest greater than or equal', @StartTS),
       @EndLSN = sys.fn_cdc_map_time_to_lsn('largest less than or equal', @EndTS)

select '@StartTS' = @StartTS, '@StartLSN' = @StartLSN, '@EndTS' = @EndTS, '@EndLSN' = @EndLSN
/*
@StartTS	            @StartLSN	            @EndTS	                @EndLSN
======================= ======================  ======================= ======================
2022-05-06 00:00:00.000	0x0021881A000AFD2F0001	2022-05-09 08:00:00.000	0x0021881A000AFB140001
*/

select h.PortfolioOldCode, 'minPriceDate' = min(h.PriceDate)
  from accounting.cdc.dbo_ph_staging_table_CT h (nolock)
  where h.__$start_lsn >= @StartLSN
    and h.__$start_lsn <=@EndLSN
    and h.__$operation in (2, 4)
  group by h.PortfolioOldCode
  order by h.PortfolioOldCode
go

-- End of Script to get data between start LSN and end LSN or date time from CDC CT tables ----------------------------------------------

RESTORE DATABASE [MasterData] FROM  DISK = N'D:\MasterDataProdBackup\MasterData1.bak',  DISK = N'D:\MasterDataProdBackup\MasterData2.bak' WITH  FILE = 1,  MOVE N'MasterData_Data01' TO                           N'C:\SQL\bos-dbcore01\data02\MasterData_Data01.mdf',  MOVE N'MasterData_CDC' TO N'C:\SQL\bos-dbcore01\data02\MasterData_CDC.ndf', 
MOVE N'MasterData_Data02' TO N'C:\SQL\bos-dbcore01\data02\MasterData_Data02.ndf',  MOVE N'MasterData_Data03' TO    N'C:\SQL\bos-dbcore01\data02\MasterData_Data03.ndf',  MOVE N'MasterData_Data04' TO    N'C:\SQL\bos-dbcore01\data02\MasterData_Data04.ndf',  MOVE N'MasterData_Data05' TO     N'C:\SQL\bos-dbcore01\data02\MasterData_Data05.ndf',  MOVE N'MasterData_Data06' TO                     N'C:\SQL\bos-dbcore01\data02\MasterData_Data06.ndf',  MOVE N'MasterData_Data07' TO    N'C:\SQL\bos-dbcore01\data02\MasterData_Data07.ndf',  MOVE N'MasterData_Data08' TO                        N'C:\SQL\bos-dbcore01\data02\MasterData_Data08.ndf',  MOVE N'MasterData_log' TO N'C:\SQL\bos-dbcore01\data02\MasterData_Log.ldf',   NOUNLOAD,  REPLACE,  STATS = 10,  BUFFERCOUNT = 300,
MAXTRANSFERSIZE = 41943
